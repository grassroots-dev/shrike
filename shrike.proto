syntax = "proto3";
package shrike;

// Shrike is a web service for coordinating political campaigns, volunteer efforts, and fund raising.
service Shrike {
    rpc CreateConfiguration (StubRequest) returns (StubResponse) {}
    rpc ReadConfiguration (StubRequest) returns (StubResponse) {}
    rpc UpdateConfiguration (StubRequest) returns (StubResponse) {}
    rpc DestroyConfiguration (StubRequest) returns (StubResponse) {}

    rpc CreateUser(StubRequest) returns (StubResponse) {}
    rpc ReadUser (StubRequest) returns (StubResponse) {}
    rpc ListUsers (StubRequest) returns (StubResponse) {}
    rpc UpdateUser(StubRequest) returns (StubResponse) {}
    rpc ArchiveUser(StubRequest) returns (StubResponse) {}

    rpc CreateMovement (CreateMovementRequest) returns (CreateMovementResponse) {}
    rpc ReadMovement (ReadMovementRequest) returns (ReadMovementResponse) {}
    rpc ListMovements (ListMovementsRequest) returns (ListMovementsResponse) {}
    rpc UpdateMovement(UpdateMovementRequest) returns (UpdateMovementResponse) {}
    rpc DeleteMovement (DeleteMovementRequest) returns (DeleteMovementResponse) {}

    rpc CreateLandingPage (StubRequest) returns (StubResponse) {}
    rpc ReadLandingPage (StubRequest) returns (StubResponse) {}
    rpc ListLandingPages(StubRequest) returns (StubResponse) {}
    rpc UpdateLandingPage(StubRequest) returns (StubResponse) {}
    rpc ArchiveLandingPage (StubRequest) returns (StubResponse) {}

    rpc GetVolunteerLocationStream (StubRequest) returns (stream StubResponse) {}
  }

message UUID {
  string value = 1;
}

// Simple request message for stubbed service calls..
message StubRequest {
  string name = 1;
}

// Simple response message for stubbed service calls..
message StubResponse{
  string message = 1;
}


// MOVEMENT MESSAGE TYPES
message Movement{
  string ID = 1;
  string title = 2;
  string description = 3;
  string URI = 4;
  string featuredImage = 5;
}


// Request Message Types
message CreateMovementRequest{
  string title = 1;
  string description = 2;
  string URI = 3;
  string featuredImage = 4;
  string user = 5;
}

message ReadMovementRequest{
  string ID = 1;
}

message ListMovementsRequest{
  int64 limit = 1;
  string filter = 2;
  string sort = 3;
}

message UpdateMovementRequest{
  Movement item = 1;
}

message DeleteMovementRequest{
  string ID = 1;
}

// Response Message Types
message CreateMovementResponse{
  Movement item = 1;
}

message ReadMovementResponse{
  Movement item = 1;
}

message ListMovementsResponse{
  repeated Movement data = 1;
}

message UpdateMovementResponse{
  Movement item = 1;
}

message DeleteMovementResponse{
  Movement item = 1;
}